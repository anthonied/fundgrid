@model Fundgrid.MVC.Models.CreateModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<div>
    <div>
        <p>Project Name</p>
        <input type="text" data-bind="value: projectName"/>
        <br />

        <p>Project Description</p>
        <textarea data-bind="value: projectDescription"></textarea>
    </div><br />

    <button class="btn btn-primary" data-bind="click: CreateProject">Create</button><br />

    <a href="#" class="btn btn-primary" data-bind="click: BackToTheList">Back to List</a>
</div>

@*@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Project</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}*@

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section scripts {
    <script>
        var model = @(Html.Raw(Json.Encode(Model)))

        projectName = ko.observable();
        projectDescription = ko.observable();

        function CreateViewModel()
        {
            var self = this;
        }

        CreateProject = function ()
        {
            alert(projectDescription());
            $.post("/Project/Create/", { name: projectName(), description: projectDescription()}, function () { document.location.reload(true) });
        }

        BackToTheList = function ()
        {
            changeLocation("/Project/Index/");
        }

        ko.applyBindings(new CreateViewModel(), document.getElementById("bodyDiv"));

        $(document).ready(function ()
        {
            busyViewModel.IsBusy(false);
        });    
        
    </script>
}
@*@section scripts {
	<script>
	    $(document).ready(function ()
	    {
	        busyViewModel.IsBusy(false);
	    });
	</script>
}*@
