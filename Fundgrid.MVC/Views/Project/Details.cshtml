<script src="../../Scripts/knockout-2.2.1.js" type="text/javascript"></script>
@model FunGrid.Domain.Project

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<fieldset>
    <legend>Project</legend>
   
    <div class="display-label">
         @Html.DisplayNameFor(model => model.Name)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Name)
    </div>

    <div class="display-label">
         @Html.DisplayNameFor(model => model.Description)
    </div>
    <div class="display-field">
        @Html.DisplayFor(model => model.Description)
    </div>
</fieldset>
<p>
    @Html.ActionLink("Edit", "Edit", new { id=Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>


<p>Rows: <strong data-bind="text: GridRows"></strong></p>
<p>Columns: <strong data-bind="text: GridColumns"></strong></p>

<p>Rows: <input data-bind="value: GridRows" /></p>
<p>Columns: <input data-bind="value: GridColumns" /></p>
<button data-bind="click: CreateNewGrid">Create New Grid</button>

<table border=1 data-bind="foreach: GridItems">
    <tr>
        <td data-bind="text: Id"></td>
    </tr>
</table>

@Html.Raw(Model)

<script type="text/javascript">
    var viewModel = @(Html.Raw(Json.Encode(Model)));
    GridItemViewModel = function()
    {
        alert("GridItemItemViewModel");
        var self = this;
        self.Id = ko.observable();
        self.MoneyValue = ko.observable();
    }
    GridViewModel = function()
    {
        var self = this;
        self.Row = ko.observable(0);
        self.Column = ko.observable(0);
        self.GridItems = new Array();
    }
    ProjectViewModel = function()
    {
        var self = this;
        self.Id = ko.observable(viewModel.Id);
        self.Name = ko.observable(viewModel.Name);
        self.Description = ko.observable(viewModel.Description);
        self.Image = ko.observable(viewModel.Image);
        //GridItem = ko.observable();
        GridRows = ko.observable();
        GridColumns = ko.observable();
        Grid = new GridViewModel();

        CreateNewGrid = function()
        {
           alert ("TEST");
           alert(" Rows: " + GridRows() + " Columns: " + GridColumns());
           var count = 0;
           for (var i = 0; i < GridRows(); i++)
           {
                for (var j = 0; j < GridColumns(); j++)
                {
                    //alert("Grid: " + Grid.GridItems)
                    alert("IN FOR")
                    var gridItem = new GridItemViewModel();
                    Grid.GridItems.push(gridItem);
                    gridItem.Id = count;
                    count++;
                    alert("FOR DONE")
                }
           }
           alert("Created " + count + " grid items");
        };
    };
    var models = 
    {
//        gridItemViewModel : new GridItemViewModel(),
//        gridViewModel : new GridViewModel(),
        projectViewModel : new ProjectViewModel()
    };
    ko.applyBindings(models);
</script>