@model FunGrid.Domain.Project
<script src="~/Scripts/knockout-2.2.1.js"></script>
<script src="~/Scripts/jquery-1.9.1.js"></script>



@{
    ViewBag.Title = "Details";
}

    <h1>@Html.DisplayFor(model => model.Name)</h1>

    <fieldset>
        <legend>Description: @Html.DisplayFor(model => model.Description)</legend>
        
        
        @if (Model.Grid == null)
        {
            <table>
            <tr>
                <th>Rows</th>
                <td><input id="GridRows" type="text" data-bind="value: row"></td>
            </tr>
            <tr>
                <th>Columns</th>
                <td><input id="GridColumns" type="text" data-bind="value: column"></td>
            </tr> 
            <tr>
                <td></td>
                <td><input type="button" value="Create Grid" data-bind="click: CreateGrid" /></td>
            </tr> 
            </table>   
        }
        else
        {
         @*<div></div>
            <table border="1">*@
              @*<tr>Bought GridItems: @Model.Grid.GridItems.Count Number: @Model.Grid.GridItems[0].Number</tr>*@
              @*@for (int i = 0; i < Model.Grid.DimensionRows; i++)
                {                  
                    <tr style="height:50px">
                        @for (int j = 0; j < Model.Grid.DimensionColumns; j++)
                        {
                            <td width="100px" align="center">@Html.ActionLink("Buy", "Details")</td>
                        }
                    </tr>                  
                }
            </table>
                <p>
                    @Html.ActionLink("Delete Grid", "Index")
                </p>*@
        }

        <br />
          @*<table border="1" class="table">
              <thead>
                  <tr>
                     <th>Number</th>
                    <th>Owner</th>
                    <th>Amount</th>
                  </tr>
              </thead>
              <tbody data-bind="foreach: gridItems">
                  <tr>
                    <td data-bind="text: Number"></td>
                    <td data-bind="text: Owner"></td>
                    <td data-bind="text: Amount"></td>
                  </tr>
              </tbody>
          </table>*@

        <table border="1" class="table">
              <thead>
                  <tr>
                     <th>Number</th>
                    <th>Owner</th>
                    <th>Amount</th>
                  </tr>
              </thead>
              <tbody data-bind="foreach: gridItems">
                  <tr>                    
                    <td data-bind="text: Number"></td>
                    <td data-bind="text: Owner"></td>
                    @*<td aria-valuetext=""></td>*@
                    <td data-bind="text: Amount"></td>
                    <td><input type="button" value="Buy" data-bind="visible: IsAvailable == true, click: TestButton, text: Owner"/></td>
                  </tr>
              </tbody>
          </table>
        <br />

        <p>@Html.ActionLink("Delete Grid", "Index")</p>
        <p>@Html.ActionLink("Back to List", "Index")</p>
    </fieldset>
    

<script>
    var viewModel = @(Html.Raw(Json.Encode(Model)));

    GridItemViewModel = function()
    {
        var self = this;
        self.Id = ko.observable();
        self.Number = ko.observable();
        self.Owner = ko.observable();
        self.Amount = ko.observable();
        self.IsAvailable= ko.observable();

        TestButton = function()
        {            
            alert("What?");
        }
    };

    var itemCount = viewModel.Grid.DimensionRows * viewModel.Grid.DimensionColumns;

    GridViewModel = function ()
    {
        this.row = ko.observable(0);
        this.column = ko.observable(0);
        this.gridItems = ko.observableArray();
        //this.OwnerComputeble= ko.computed()
        
        for(var i = 0; i < itemCount; i++)
        {
            var model = new GridItemViewModel();
            model.Number = i + 1;
            model.IsAvailable = true;
            model.Amount = 100.00;
        
            for(var j = 0; j < viewModel.Grid.GridItems.length; j++)
            {
                if(model.Number == viewModel.Grid.GridItems[j].Number)
                {
                    model.Owner = viewModel.Grid.GridItems[j].Owner;
                    model.Amount = viewModel.Grid.GridItems[j].Amount;
                    model.IsAvailable = viewModel.Grid.GridItems[j].IsAvailable;
                }
                else
                {
				
                }
            };
		
            this.gridItems.push(model);
        }; 


        
        CreateGrid = function ()
        {
            alert("create grid");
            $.post("/Project/CreateGrid/", { projectId: viewModel.Id, gridDimensionRows: this.row(), gridDimensionColumns: this.column() }, function (response) { alert('Grid successfully added'); });
        }

        BuyGridItem = function()
        {
            alert("buy grid item");
            //$.post("/Project/BuyGridItem/", { projectId: viewModel.Id, gridDimensionRows: this.row(), gridDimensionColumns: this.column() }, function (response) { alert('Grid successfully added'); });
        }
        //ShowGrid = function ()
        //{

        //}
    };
    
    var models = 
        {
            m1: new GridViewModel(),
            m2: new GridItemViewModel()
        };
    ko.applyBindings(models.m1);
    ko.applyBindings(models.m2);

</script>