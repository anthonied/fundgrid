@model FunGrid.Domain.Project
<script src="~/Scripts/knockout-2.2.1.js"></script>
<script src="~/Scripts/jquery-1.9.1.js"></script>

@{
    ViewBag.Title = "Details";
}

    <h1>@Html.DisplayFor(model => model.Name)</h1>

    <fieldset>
        <legend>Description: @Html.DisplayFor(model => model.Description)</legend>
        
        
         @if (Model.Grid == null)
        {
             <table>
            <tr>
                <th>Rows</th>
                <td><input id="GridRows" type="text" data-bind="value: row"></td>
            </tr>
            <tr>
                <th>Columns</th>
                <td><input id="GridColumns" type="text" data-bind="value: column"></td>
            </tr> 
            <tr>
                <td></td>
                <td>
                     <input type="button" value="Create Grid" data-bind="click: CreateGrid" />
                </td>
            </tr> 
         </table>   
        }
        else
        {
         <div></div>
            <table border="1">
              <tr>Bought GridItems: @Model.Grid.GridItems.Count Number: @Model.Grid.GridItems[0].Number</tr>
              @for (int i = 0; i < Model.Grid.DimensionRows; i++)
                {                  
                    <tr style="height:50px">
                        @for (int j = 0; j < Model.Grid.DimensionColumns; j++)
                        {
                            <td width="100px" align="center">@Html.ActionLink("Buy", "Details")</td>
                        }
                    </tr>                  
                }
            </table>
                <p>
                    @Html.ActionLink("Delete Grid", "Index")
                </p>

        }

        <table data-bind="foreach: GridItemViewModel">
            <tr>
                <td data-bind="text: Amount"></td>
                <td data-bind="text: Owner"></td>
            </tr>
        </table>
    </fieldset>
    <p>
        @Html.ActionLink("Back to List", "Index")
    </p>

<script>
    var viewModel = @(Html.Raw(Json.Encode(Model)));

    GridItemViewModel = function()
    {
        var self = this;
        self.Id = ko.observable();
        self.Number = ko.observable();
        self.Owner = ko.observable();
        self.Amount = ko.observable();
    }
    var itemCount = viewModel.Grid.DimensionRows * viewModel.Grid.DimensionColumns;
    var gridItems = new Array(itemCount);

    for(var i = 0; i < viewModel.Grid.GridItems.length; i++)
    {
        gridItems[viewModel.Grid.GridItems[i].Number - 1] = new GridItemViewModel
        {
            Id = viewModel.Grid.GridItems[i].id,
            Number = viewModel.Grid.GridItems[i].Number,
            Owner = viewModel.Grid.GridItems[i].Owner,
            Amount = viewModel.Grid.GridItems[i].Amount
        };
    }
    GridViewModel = function ()
    {
        this.row = ko.observable(0);
        this.column = ko.observable(0);
        this.gridItems = ko.observableArray();
        CreateGrid = function ()
        {
            $.post("/Project/CreateGrid/", { projectId: viewModel.Id, gridDimensionRows: this.row(), gridDimensionColumns: this.column() }, function (response) { alert('Grid successfully added'); });
        }
        ShowGrid = function ()
        {



        }
    }

    ko.applyBindings(new GridViewModel())
</script>